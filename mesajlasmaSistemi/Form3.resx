<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOXtxjrl7sd35u3HZOPx
        xhIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOXux3bm7cf/5u3H/+bt
        x//m7cbd5e3Hn+btx/nn7ce85e3KHf//vwQAAAAAAAAAAAAAAAAAAAAAAACAApWblSnc48H83uXB/9/n
        w//m7cf/5u3H/+btx//m7cf/5u3H/+btx//m7cfy5e3GOgAAAAAAAAAAAAAAAKmwupHi7vH/6PX3/+n3
        +P+9xcf/ysyo/8XGp//Dxqj/t7um/8HLwv/DzcT/x8++/+btx5wAAAAAAAAAAOvrzBna4MHuvMa6/+Tw
        8//Bysv/uryn/9vbqP/b26j/z8+j/9PVs/+/ycn/6fb4/8TLy//l7cZiAAAAAAAAAADm7spc6O/M/+ju
        y/+ssqP/3d+9/9LSrv/HyKf/yMil/9nZt//k5cD/srm5/9fi3v/T27//5u/FPgAAAAAAAAAA9vvpOu/z
        2/Pu89r/ur6n/97fvP/Gx7P/9Pjc/+ns1P/Awaz/0tO3/66ypf/i6cT/5u3H/+XtyEUAAAAAAAAAAAAA
        AADq6soY5u3H0q2wn//V2ML/+Pzg//j84P/4/OD/zdDE/8LIy/97nrH/LXiy/77Ou9ff378IAAAAAAAA
        AAAAAAAAAAAAAOjsyULe58Pytbql/7O4pP+zuKT/s7ik/660t/+2vcT/marC/2aVyP9xfZpqAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA5PLJE+bvxT7l7Mez5u3H/+btx/+3vrj/xMzP/8TLz//ByMr2doCONAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5OvJJubtx+fm7cf/4OjF/8fMwP+/xcDjl5umQgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADq6soY5+3GfujtyZ3r8tF0///6L///
        /wcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA//8AAPgPAADwAwAAwAEAAMADAADAAwAAwAMAAOAD
        AADwBwAA/AcAAP4PAAD/vwAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//78E4fDDEdv/tgcAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADn68dA5+3HvObtx/vm7cf/5u3H+eXtxr3n7sdJAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5uzHeubtx/7m7cf/5u3H/+btx//m7cf/5u3H/+bt
        x//l7saU4fDDEeftx57m7cf15u3H/ebtx8Pm78U+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOfsx1/m7cf/5u3H/+btx//m7cf/5u3H/+bt
        x//m7cf/5u3H/+btx//m7cfw5u3H/+btx//m7cf/5u3H/+btx/rl7MhP4+7ILuTvyS///6oDAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADm5swK5u3H7ubtx//m7cf/5u3H/+bt
        x//m7cf/5u3H/+btx//m7cf/5u3H/+btx//m7cf/5u3H/+btx//m7cf/5u3H/+btx//m7cf/5u3H/+fu
        x9vm7McpAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiM0QPJi1EIqy1oHHM07X/2uK//9fd
        vf/Y3r3/zNO1/9/nw//m7cf/5u3H/+btx//m7cf/5u3H/+btx//m7cf/5u3H/+btx//m7cf/5u3H/+bt
        x//m7cf/5u3H/+btx9L///8CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDBAEJSeq9TU4OT/1ODk/9Xh
        5f/p9vj/4/Dy/+Lu8f/T3uP/kZee/7S4pf+0uKX/tLil/6Glmf+anpX/mp6V/5qelf+3vKn/zdS5/8HH
        sP/Bx7D/wcew/8jQtP/m7cf/5u3H/+XvxjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaWmclvcbN9+/8
        /f/v/P3/7/z9/+/8/f/v/P3/7/z9/+Pv8f+psLP/0tOn/9XVqP/V1aj/1dWo/9XVqP/V1aj/1NSn/5SV
        iP+lrrb/1ODk/9Tg5P/U4OT/ztne/6Wspf/m7cf/5u3GSAAAAAAAAAAAAAAAAAAAAAAAAAAA//+/BObu
        x766wa7/n6ep/9Hc4f/s+fr/7/z9/+/8/f/v/P3/tr7F/7K0lP/b26j/29uo/9vbqP/b26j/29uo/9jZ
        p/+kppD/2dq5/5Sanf/v/P3/7/z9/+/8/f/v/P3/r7e5/+btx/zi68QaAAAAAAAAAAAAAAAAAAAAAAAA
        AADm7sZn5u3H/+btx//f5sL/pKqd/8bQ1f/v/P3/o6qt/56kqP+bn5f/29uo/9vbqP/b26j/29uo/9vb
        qP/W1qX/q6yU/+Hivf/k5cD/k5id/+/8/f/v/P3/0Nzh/77Izv+qsKj/5e3IigAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAObuyK/m7cf/5u3H/+btx//m7cf/fYKG/6+0rf/LzrP/5OXA/8DApP/ExZv/29uo/7m5
        l//Q0KH/zs6g/7O0mv/k5cD/5OXA/+TlwP+TmJ3/7/z9/+/8/f/v/P3/qLCs/+btx//l7MZsAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA6O/NvOnvzf/u89n/6e/O/+nvzv+QlI3/5OXA/+TlwP/k5cD/5OXA/9/g
        uP+srJX/3N/H/7e4o//Fxqb/5OXA/+TlwP/k5cD/5OXA/5OYnf+co6f/q7K2/6y0tf/L0bj/5u3H/+bt
        yKYAAAAAAAAAAAAAAAAAAAAAAAAAAP///yn3+Oq38fXf//L24v/w9N7/8vbj/5GVjf/k5cD/5OXA/+Tl
        wP/a27r/r7Gi/+7y1//4/OD/+Pzg/8bIt//DxKr/5OXA/+TlwP/k5cD/fYCF/8TLs//m7cf/5u3H/+bt
        x//m7cf/5u3HrAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAObmzArn7crK7vPa//D03f/m7cf/kJSM/+Tl
        wP/k5cD/y8yx/7K1p//4/OD/+Pzg//j84P/4/OD/+Pzg/9faxf+WmZP/q62f/+Dhvf+RlIz/5u3H/8bM
        sf/Y3r3/5u3H/+btx//n7ch9AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAN/fvwjl7chh5uzH3Obt
        x/+Slo3/4+S//7m6pv/P0r//+Pzg//j84P/4/OD/+Pzg//j84P/4/OD/+Pzg/52iov/N1tj/mp+h/4OI
        jP9YgZP/K2Si/zl/p//Azbf/5u3H9ufvxyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADm7cZw5u3H/7q/qf+NkIv/6uzT//j84P/4/OD/+Pzg//j84P/4/OD/+Pzg//j84P/y9tz/nqOl/9jg
        4f/Y4OH/2ODh/zx1sv8jhMT/KXrD/3eapfzm7sZaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAObmzArm7cjY5u3H/77ErP+XmpH/lpiQ/5aYkP+WmJD/lpiQ/5aYkP+WmJD/lpiQ/4OF
        jf/W3d7/xs3R/8DIzP/J0tT/UGCo/yuBzv86WrT/UlyIwQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAOfvxyDm7MfO5u3H/+btx//m7cf/5u3H/+btx//m7cf/5u3H/+bt
        x//m7cf/oqmr/8nS1P+1vML/tbzC/7W8wv++x8v/obO//77Kz/+NkZ+5AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//vwTn7cdW5u3Hjubsxofn7Mey5u3H/+bt
        x//m7cf/5u3H/+btx/+fpqT/ztbZ/660vP+0usH/rrS8/620u/+4v8X/2ODh/3uBj6YAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOXv
        xjHm7cf+5u3H/+btx//m7cf/5u3H/8jNtP+jqa3/0NfZ/83U1//Q19n/z9fa/9HZ3P+Nkp/USEhgIAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAObsx5fm7cf/5u3H/+btx//m7cf/5u3H/9HVu/+lqaf/p62u/6Goq/+lq6z5g4aTp05Y
        bBoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///MBeXtx6nm7cf/5u3H/+btx//m7cf/6e/N/+zy1f/w9N3/8/bk9fb4
        7XD///8u////AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////AeXtxmPm7cfj5u3H/+btx//r8dL/6e/P+e/z
        3L36+vVp////dP///yEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///wLl78Yx5ezHRObu
        yDzm5swKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///////////////////////////+D////AIf//gAD//wAAD/8A
        AAf4AAAH+AAAB/AAAAfwAAAH4AAAD+AAAAfgAAAH8AAAD/wAAA/+AAAf/gAAH/8AAB//wAAf//gAP//4
        AH///AH///8D////////////////////////////
</value>
  </data>
</root>